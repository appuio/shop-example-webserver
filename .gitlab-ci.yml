stages:
    - build
    - deploy-staging
    - deploy-preprod
    - deploy-prod

variables:
    OC_REGISTRY_URL: "registry.appuio.ch"
    OC_REGISTRY_IMAGE: "$OC_REGISTRY_URL/$KUBE_NAMESPACE/webserver"

test:
    stage: build
    image: registry.vshn.net/roland.schlaefli/docs_runner_yarn
    script:
        # install necessary application packages
        - yarn install --cache-folder=".yarn"
        # test the application sources
        - yarn test
    cache:
        key: "$CI_PROJECT_ID"
        paths:
            - .yarn
            - node_modules/
    # TODO: remove once issue is fixed
    allow_failure: true

compile:
    stage: build
    image: registry.vshn.net/roland.schlaefli/docs_runner_yarn
    script:
        # install necessary application packages
        - yarn install --cache-folder=".yarn"
        # build the application sources
        - yarn build
    artifacts:
        expire_in: "5min"
        paths:
            - "build"
    cache:
        key: "$CI_PROJECT_ID"
        paths:
            - .yarn
            - node_modules/
    only:
        - master
        - tags

build-staging:
    environment: webserver-staging
    stage: deploy-staging
    image: registry.vshn.net/roland.schlaefli/docs_runner_oc
    services:
        - docker:dind
    script:
        # login to the service account to get access to the internal registry
        - oc login $KUBE_URL --token=$KUBE_TOKEN
        - docker login -u serviceaccount -p `oc whoami -t` $OC_REGISTRY_URL
        # build the docker image and tag it as latest
        # use the current latest image as a caching source
        - docker pull $OC_REGISTRY_IMAGE:latest
        - docker build --cache-from $OC_REGISTRY_IMAGE:latest -t $OC_REGISTRY_IMAGE:latest .
        # update the configuration in OpenShift
        - oc replace -f docker/openshift -R
        # push the image to the internal registry
        - docker push $OC_REGISTRY_IMAGE:latest
        # trigger a deployment
        - oc deploy webserver --latest
    only:
        - master
    except:
        - tags
    tags:
        - dockerbuild

build-preprod:
    environment: webserver-preprod
    stage: deploy-preprod
    image: registry.vshn.net/roland.schlaefli/docs_runner_oc
    services:
        - docker:dind
    script:
        # login to the service account to get access to the internal registry
        - oc login $KUBE_URL --token=$KUBE_TOKEN
        - docker login -u serviceaccount -p `oc whoami -t` $OC_REGISTRY_URL
        # build the docker image and tag it as stable
        # use the current latest image as a caching source
        - docker pull $OC_REGISTRY_IMAGE:latest
        - docker build --cache-from $OC_REGISTRY_IMAGE:latest -t $OC_REGISTRY_IMAGE:stable .
        # push the image to the internal registry
        - docker push $OC_REGISTRY_IMAGE:stable
    only:
        - tags
    tags:
        - dockerbuild

build-prod:
    environment: webserver-prod
    stage: deploy-prod
    image: registry.vshn.net/roland.schlaefli/docs_runner_oc
    script:
        # login to the service account to get access to the CLI
        - oc login $KUBE_URL --token=$KUBE_TOKEN
        # tag the current stable image as live
        # triggers a deploy to prod via ImageStream
        - oc tag webserver:stable webserver:live
    only:
        - tags
    when: manual
